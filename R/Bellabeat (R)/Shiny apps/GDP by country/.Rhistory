View(countries_gdp_hist)
View("countries_gdp_hist.csv")
View(countries_gdp_hist.csv)
working_dir()
getwd()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data("countries_gdp_hist.csv")
data("countries_gdp_hist")
data("/countries_gdp_hist.csv")
runApp()
getwd()
runApp()
View(gdp)
runApp()
View(gdp)
runApp()
View(gdp)
runApp()
runApp()
runApp()
head(gdp)
gdp <- read_csv("countries_gdp_hist.csv")
head(gdp)
View(gdp)
runApp()
runApp()
View(gdp)
runApp()
runApp()
runApp()
runApp()
runApp()
View(df_gdp)
View(gdp)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
countryData()
runApp()
runApp()
runApp()
View(countryData)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
countryData()
View(countryData())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
yearData()
runApp()
runApp()
runApp()
runApp()
yearData()
View(yearData)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
yearData()
runApp()
yearData()
runApp()
countryData()
countryData()
runApp()
countryData()
countryData
countryData()
describe(countryData)
filteredData <- df_gdp[df_gdp$year == input$selectYear,]
shiny::runApp()
runApp()
cls
clear
runApp()
runApp()
runApp()
ggplot(data = yearData, mapping = aes(x = country_name, y = total_gdp)) + geom_line())
ggplot(data = yearData, mapping = aes(x = country_name, y = total_gdp)) + geom_line()
ggplot(data = yearData(), mapping = aes(x = country_name, y = total_gdp)) + geom_line()
yearData()
ggplot(data = datatable(yearData()), mapping = aes(x = country_name, y = total_gdp)) + geom_line()
ggplot(data = data.frame(yearData()), mapping = aes(x = country_name, y = total_gdp)) + geom_line()
ggplot(data = data.frame(yearData()), mapping = aes(x = country_name, y = total_gdp)) + geom_point()
runApp()
runApp()
return(ggplot(data = yearData(), mapping = aes(x = country_name, y = total_gdp)) + geom_bar())
runApp()
runApp()
runApp()
runApp()
runApp()
return(ggplot(data = yearData()[,1:10], mapping = aes(x = country_name, y = total_gdp)) + geom_line())
Q
runApp()
runApp()
return(ggplot(data = yearData(), mapping = aes(x = country_name, y = total_gdp)) + geom_line())
Q
runApp()
return(ggplot(data = yearData(), mapping = aes(x = country_name, y = total_gdp)) + geom_line())
runApp()
> yearData()
View(filteredData)
filteredData[1:10,]
runApp()
runApp()
runApp()
View(filteredData2)
runApp()
View(filteredData2)
runApp()
View(filteredData2)
type(filteredData2$total_gdp)
glimpse(filteredData2)
runApp()
runApp()
shiny::runApp()
runApp()
data_year_max_gdp()
filteredData3
runApp()
runApp()
filter(year == max(total_gdp)) %>% select(year)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(topGdpData)
runApp()
View(topGdpData)
runApp()
View(topGdpData)
runApp()
runApp()
runApp()
View(topGdpData)
head(topGdpData)
glimpse(topGdpData)
runApp()
glimpse(topGdpData)
runApp()
runApp()
glimpse(topGdpData)
runApp()
glimpse(topGdpData)
runApp()
glimpse(topGdpData)
runApp()
glimpse(totalGdpData)
glimpse(topGdpData)
runApp()
runApp()
View(data_year_max_gdp)
print(data_year_max_gdp)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("ggrepel")
runApp()
